{
    "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
    "version": 1,
    "newProjectRoot": "projects",
    "projects": {
        "avalon-ng": {
            "projectType": "application",
            "schematics": {
                "@schematics/angular:component": {
                    "style": "scss"
                }
            },
            "root": "",
            "sourceRoot": "src",
            "prefix": "app",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "allowedCommonJsDependencies": [
                            "crypto-js",
                            "turn.js",
                            "jquery",
                            "exceljs",
                            "pdfjs-dist",
                            "quill-delta",
                            "guid-ts",
                            "@messageformat/core",
                            "file-saver",
                            "html2canvas",
                            "google-libphonenumber",
                            "rgbcolor",
                            "raf",
                            "core-js/modules/es.array.index-of.js",
                            "core-js/modules/web.dom-collections.iterator.js",
                            "jspdf-autotable",
                            "core-js/modules/es.array.iterator.js",
                            "core-js/modules/es.array.reduce.js",
                            "core-js/modules/es.array.reverse.js",
                            "core-js/modules/es.promise.js",
                            "core-js/modules/es.regexp.to-string.js",
                            "core-js/modules/es.string.ends-with.js",
                            "core-js/modules/es.string.includes.js",
                            "core-js/modules/es.string.match.js",
                            "core-js/modules/es.string.replace.js",
                            "core-js/modules/es.string.split.js",
                            "core-js/modules/es.string.starts-with.js",
                            "core-js/modules/es.string.trim.js"
                        ],
                        "outputPath": "dist/avalon-ng",
                        "index": "src/index.html",
                        "main": "src/main.ts",
                        "polyfills": ["zone.js"],
                        "tsConfig": "tsconfig.app.json",
                        "inlineStyleLanguage": "scss",
                        "assets": [
                            "src/favicon.ico",
                            "src/assets",
                            {
                                "glob": "**/*",
                                "input": "./node_modules/monaco-editor/min",
                                "output": "/assets/monaco/min/"
                            }
                        ],
                        "styles": [
                            "src/styles.scss",
                            "node_modules/@fortawesome/fontawesome-free/css/all.min.css",
                            "node_modules/quill/dist/quill.snow.css",
                            "node_modules/quill/dist/quill.core.css",
                            "node_modules/intro.js/introjs.css",
                            "node_modules/intl-tel-input/build/css/intlTelInput.css",
                            "src/assets/rich-text/summernote-lite.min.css"
                        ],
                        "scripts": [
                            "node_modules/quill/dist/quill.js",
                            "node_modules/jquery/dist/jquery.min.js",
                            "src/assets/rich-text/jquery-3.4.1.slim.min.js",
                            "src/assets/rich-text/summernote-lite.min.js",
                            "node_modules/intro.js/intro.js"
                        ]
                    },
                    "configurations": {
                        "production": {
                            "fileReplacements": [
                                {
                                    "replace": "src/environments/environment.ts",
                                    "with": "src/environments/environment.prod.ts"
                                }
                            ],
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "8mb",
                                    "maximumError": "8mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "8mb",
                                    "maximumError": "8mb"
                                }
                            ],
                            "outputHashing": "all"
                        },
                        "testing": {
                            "fileReplacements": [
                                {
                                    "replace": "src/environments/environment.ts",
                                    "with": "src/environments/environmentTest.ts"
                                }
                            ],
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "8mb",
                                    "maximumError": "8mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "8mb",
                                    "maximumError": "8mb"
                                }
                            ],
                            "outputHashing": "all"
                        },
                        "development": {
                            "buildOptimizer": false,
                            "optimization": false,
                            "vendorChunk": true,
                            "extractLicenses": false,
                            "sourceMap": false,
                            "namedChunks": true
                        }
                    },
                    "defaultConfiguration": "production"
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "configurations": {
                        "production": {
                            "buildTarget": "avalon-ng:build:production"
                        },
                        "development": {
                            "buildTarget": "avalon-ng:build:development"
                        }
                    },
                    "defaultConfiguration": "development"
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "buildTarget": "avalon-ng:build"
                    }
                },
                "test": {
                    "builder": "@angular-devkit/build-angular:karma",
                    "options": {
                        "polyfills": ["zone.js", "zone.js/testing"],
                        "tsConfig": "tsconfig.spec.json",
                        "karmaConfig": "karma.conf.js",
                        "inlineStyleLanguage": "scss",
                        "assets": ["src/favicon.ico", "src/assets"],
                        "styles": ["src/styles.scss"],
                        "scripts": []
                    }
                }
            }
        }
    },
    "cli": {
        "analytics": false
    }
}
